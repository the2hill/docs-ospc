<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE application [
    <!ENTITY % common  SYSTEM "common.ent">
    %common;


]>
<application
        xmlns="http://wadl.dev.java.net/2009/02"
        xmlns:xlink="http://www.w3.org/1999/xlink"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
        xmlns:wadl="http://wadl.dev.java.net/2009/02"
        xmlns:dbaas="http://docs.openstack.org/database/api/v1.0">

    <grammars>
        <include href="dbaas.xsd" />
    </grammars>

    <resources base="https://ord.databases.api.rackspacecloud.com">
        <resource id="versions" path="">
            <method href="#getVersions" />
        </resource>
        <resource id="version" path="{version}">
            <method href="#getVersionInfo" />
            <resource id="accountID" path="{accountId}">
                <param name="accountId" style="template"
                    type="xsd:string">
                    <doc>The account ID of the owner of the specified instance.</doc></param>
                <resource id="instances" path="instances">
                    <method href="#createInstance" />
                    <method href="#getInstance" />
                    <method href="#restoreBackup" />
                    <method href="#createReplica" />
                    <method href="#getReplicasOrReplicaSources" />


                    <resource id="instanceId" path="{instanceId}">
                        <param name="instanceId" style="template"
                            type="xsd:string" >
                            <doc>The instance ID for the specified database instance.</doc></param>
                        <method href="#updateInstance" />
                        <method href="#getInstanceById" />
                        <method href="#deleteInstance" />
                        <method href="#detachReplica" />
                        <method href="#getReplicaSource" />
                        <method href="#getReplica" />
                        <resource id="replicas" path="replicas">
                            <method href="#getReplicasBySourceInstance" />
                        </resource>
                        <resource id="instanceAction" path="action">
                            <method href="#resizeInstance" />
                            <method href="#resizeVolume" />
                            <method href="#restartInstance" />
                        </resource>
                        <resource id="databases" path="databases">
                            <method href="#createDatabase" />
                            <method href="#getDatabases" />
                            <resource id="databaseName" path="{databaseName}">
                                <param name="databaseName" style="template"
                                    type="xsd:string" >
                                    <doc>The name for the specified database.</doc></param>
                                <method href="#deleteDatabase" />
                            </resource>
                        </resource>
                        <resource id="users" path="users">
                            <method href="#createUser" />
                            <method href="#getUsers" />
                            <method href="#changePass" />
                            <resource id="userId" path="{name}">
                                <param name="name" style="template"
                                    type="xsd:string" >
                                    <doc>The name for the specified user.
                                        Refer to
                                        <link xmlns="http://docbook.org/ns/docbook"
                                                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user_access_restrict_by_host-dle387.html"
                                            >User access restriction by host</link>
                                             for details about restricting the name to a particular host.
                                             Examples: testuser, testuser@192.168.1.12 (to restrict the user to connecting from a particular host IP).</doc></param>
                                <method href="#deleteUser" />
                                <method href="#listUser" />
                                <method href="#modifyUser" />
                                <resource id="database" path="databases">
                                    <method href="#getUserAccess" />
                                    <method href="#grantUserAccess" />
                                    <resource id="dbName" path="{databaseName}">
                                        <param name="databaseName" style="template"
                                            type="xsd:string" >
                                            <doc>The name for the specified database.</doc></param>
                                        <method href="#revokeUserAccess" />
                                    </resource>
                                </resource>
                            </resource>
                        </resource>
                        <resource id="configuration" path="configuration">
                            <method href="#getDefaultConfig" />
                        </resource>
                        <resource id="root" path="root">
                            <method href="#createRoot" />
                            <method href="#isRootEnabled" />
                        </resource>
                        <resource id="backupsB" path="backups">
                            <method href="#getBackupsByInstance" />
                        </resource>
                    </resource>
                </resource>
                <resource id="flavors" path="flavors">
                    <method href="#getFlavors" />

                    <resource id="flavorId" path="{flavorId}">
                        <param name="flavorId" style="template" type="xsd:string" >
                            <doc>The flavor ID for the specified flavor.</doc></param>
                        <method href="#getFlavorById" />
                    </resource>
                </resource>
                <resource id="backups" path="backups">
                    <method href="#createBackup" />
                    <method href="#createBackupForHaInstance" />
                    <method href="#getBackups" />
                    <resource id="backupId" path="{backupId}">
                        <param name="backupId" style="template" type="xsd:string" >
                            <doc>The backup ID for the specified backup.</doc></param>
                        <method href="#getBackupById" />
                        <method href="#deleteBackup" />
                    </resource>
                </resource>

                <resource id="automatedbackups" path="schedules">
                    <method href="#createAutoBackup" />
                    <method href="#getAutomatedBackups" />
                    <resource id="backup2Id" path="{scheduleId}">
                        <param name="scheduleId" style="template"
                            type="xsd:string" >
                            <doc>The schedule ID for the specified schedule.</doc></param>
                        <method href="#getAutomatedBackupById" />
                        <method href="#updateAutomatedBackupById" />
                        <method href="#deleteAutomatedBackupById" />
                    </resource>
                </resource>

                <resource id="configurations" path="configurations">
                    <method href="#getConfigurations" />
                    <method href="#createConfiguration" />
                    <resource id="configId" path="{configId}">
                        <param name="configId" style="template" type="xsd:string" >
                            <doc>The configuration ID for the specified configuration group.</doc></param>
                        <method href="#getConfigurationById" />
                        <method href="#updateSomeConfigParmsById" />
                        <method href="#replaceAllConfigParmsById" />
                        <method href="#deleteConfigGroup" />
                        <resource id="instances2" path="instances">
                            <method href="#getInstancesForConfiguration" />
                        </resource>
                    </resource>
                </resource>

                <resource id="datastore" path="datastore">
                    <resource id="versions5" path="version">
                        <resource id="version5Id" path="{versionId}">
                            <param name="versionId" style="template" type="xsd:string" >
                                <doc>The version for the specified datastore.</doc></param>
                            <resource id="configuration1" path="configuration">
                                <resource id="flavorId2" path="{flavorId}">
                                    <param name="flavorId" style="template" type="xsd:string" >
                                        <doc>The flavor ID for the specified flavor.</doc></param>
                                    <method href="#getVerboseDefaultConfigurationParameters" />
                                </resource>
                            </resource>
                        </resource>
                    </resource>
                </resource>


                <resource id="datastores" path="datastores">
                    <method href="#getDatastoreTypes" />
                    <resource id="versions3" path="versions">
                        <resource id="version3Id" path="{versionId}">
                            <param name="versionId" style="template" type="xsd:string" >
                                <doc>The version for the specified datastore.</doc></param>
                            <resource id="parameters2" path="parameters">
                                <method href="#getConfigurationParametersWithoutDatastore" />
                                <resource id="parameter2Id" path="{parameterId}">
                                    <param name="parameterId" style="template" type="xsd:string" >
                                        <doc>The parameter that may be configured for the specified datastore and version.</doc></param>
                                    <method href="#getConfigurationParameterDetailsWithoutDatastore" />
                                </resource>
                            </resource>
                        </resource>
                    </resource>


                    <resource id="datastoreId" path="{datastoreId}">
                        <param name="datastoreId" style="template" type="xsd:string" >
                            <doc>The ID for the specified datastore.</doc></param>
                        <method href="#getDatastoreTypesById" />
                        <resource id="versions2" path="versions">
                            <method href="#getDatastoreVersionsById" />
                            <resource id="versionId" path="{versionId}">
                              <param name="versionId" style="template" type="xsd:string" >
                                <doc>The version for the specified datastore.</doc></param>
                                <method href="#getDatastoreVersionByVersionId" />
                               <resource id="parameters" path="parameters">
                                  <method href="#getConfigurationParameters" />
                                   <resource id="parameterId" path="{parameterId}">
                                       <param name="parameterId" style="template" type="xsd:string" >
                                           <doc>The parameter that may be configured for the specified datastore and version.</doc></param>
                                       <method href="#getConfigurationParameterDetails" />
                                   </resource>
                               </resource>
                            </resource>
                        </resource>
                   </resource>

                   <resource id="datastoreType" path="{datastoreType}">
                        <param name="datastoreType" style="template" type="xsd:string" >
                            <doc>The datastore type, for example mysql.</doc></param>
                        <resource id="versions4" path="versions">
                            <resource id="versionId4" path="{versionId}">
                                <param name="versionId" style="template" type="xsd:string" >
                                    <doc>The version for the specified datastore.</doc></param>
                                <resource id="flavors2" path="flavors">
                                    <method href="#getFlavorsByDatastoreVersion" />
                                </resource>
                            </resource>
                        </resource>
                    </resource>
                 </resource>

                <resource id="ha" path="ha">
                    <method href="#createHa" />
                    <method href="#getHa" />

                    <resource id="haId" path="{haId}">
                        <param name="haId" style="template" type="xsd:string" >
                            <doc>The ID for the specified HA instance.</doc></param>
                        <method href="#getInstanceByHaId" />
                        <method href="#deleteInstanceByHaId" />
                        <resource id="action" path="action">
                            <method href="#addReplicaToHaInstance" />
                            <method href="#deleteReplicaFromHaInstance" />
                        </resource>
                        <resource id="backup3" path="backups">
                            <method href="#getBackupsForHaInstance" />
                        </resource>
                        <resource id="acls" path="acls">
                            <method href="#addAclToHaInstance" />
                            <method href="#listAclsForHaInstance" />
                            <resource id="address" path="{address}">
                                <param name="address" style="template" type="xsd:string" >
                                    <doc>The CIDR notated IPV4 address. The IPV4 address to use should be CIDR notated.</doc></param>
                                <method href="#deleteAclsFromHaInstance" />
                            </resource>
                        </resource>
                    </resource>
                </resource>

            </resource>
        </resource>
    </resources>

    <!--Token Methods... -->
    <!-- Version -->
    <method name="GET" id="getVersionInfo">
        <wadl:doc xml:lang="EN" title="List version details" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">
                Returns detailed information about the specified version of the API.
            </para>
            <para>This operation returns detailed information about the specified version of the API.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List version details request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-version-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List version details response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-version-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>

    <method name="GET" id="getVersions">
        <wadl:doc xml:lang="EN" title="List versions" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">
                Lists information about all versions of the API.
            </para>
            <para>This operation lists information about all versions of the API.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List versions request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-versions-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List versions response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-versions-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>

    <!-- Instance -->
    <method name="POST" id="createInstance">
    <wadl:doc xml:lang="EN" title="Create database instance"  xmlns="http://docbook.org/ns/docbook">
        <para role="shortdesc">Creates a new <glossterm>database instance</glossterm>.</para>
        <para>This operation asynchronously provisions a new database instance. This call requires the user to specify a <glossterm>flavor</glossterm> and a <glossterm>volume</glossterm> size. The service then provisions the instance with the requested flavor and sets up a volume of the specified size, which is the storage for the database instance.</para>
        <note><itemizedlist>
            <listitem>
                <para>You can create only one database instance per <command>POST</command> request.</para>
            </listitem>
            <listitem>
                <para>You can create a database instance with one or more databases, and users associated to those databases.</para>
            </listitem>
            <listitem>
                <para>The default binding for the database instance is port 3306.</para>
            </listitem>
            <listitem>
                <para>When used with the <code>restorePoint</code> attribute, this call performs the Restore Backup operation, creating a new database instance to store the backup.</para>
            </listitem>
            <listitem>
                <para>For information about using SSL with your database instance, refer to <link
                    xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/Using_SSL_for_Database_Instances.html"
                    >Using SSL with Your Cloud Database Instances</link>.</para>
            </listitem>
        </itemizedlist></note>
        <para>The following table lists the required and optional attributes for Create instance:</para>
        <table rules="all">
            <caption>Required and optional attributes for Create instance</caption>
            <thead>
                <tr>
                    <td colspan="1">Applies To </td>
                    <td colspan="1">Name </td>
                    <td colspan="3">Description</td>
                    <td colspan="1">Required</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="1" rowspan="5">Instance</td>
                    <td colspan="1">flavorRef</td>
                    <td colspan="3"><para>Reference (href) to a flavor as specified in the response from the List Flavors API call.
                        This is the actual URI as specified by the href field in the link. Refer to the List Flavors response examples that follow for an example of the flavorRef.</para>
                         <note><para>Rather than the flavor URI, you can also pass the flavor id (integer) as the value for flavorRef.</para></note>
                        <para>Refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/GET_getFlavors__version___accountId__flavors_flavors.html"
                            >List flavors</link> for details.</para></td>
                    <td colspan="1">Yes</td>
                </tr>
                <tr>
                    <td colspan="1">(volume) size</td>
                    <td colspan="3">Specifies the volume size in gigabytes (GB). The value specified must be between 1 and 300.</td>
                    <td colspan="1">Yes</td>
                </tr>
                <tr>
                    <td colspan="1">name</td>
                    <td colspan="3">Name of the instance to create. The length of the name is limited to 255 characters and any characters are permitted.</td>
                    <td colspan="1">No</td>
                </tr>
                <tr>
                    <td colspan="1">configuration</td>
                    <td colspan="3">Identifier of the <glossterm>configuration group</glossterm> to associate with the instance.</td>
                    <td colspan="1">No</td>
                </tr>
                <tr>
                    <td colspan="1">(datastore) version / type</td>
                    <td colspan="3">Name or uuid  of the datastore version and type to associate with the instance. If the datastore is not specified, it defaults to mysql.</td>
                    <td colspan="1">No</td>
                </tr>
                <tr>
                    <td colspan="1" rowspan="3">Database</td>
                    <td colspan="1">name</td>
                    <td colspan="3">Specifies <glossterm>database</glossterm> names for creating databases on instance creation. Refer to <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createDatabase__version___accountId__instances__instanceId__databases_databases.html"
                        >Create database</link> for the required json format.</td>
                    <td colspan="1">No</td>
                </tr>
                <tr>
                    <td colspan="1">character_set</td>
                    <td colspan="3">Set of symbols and encodings. The default character set is <code>utf8</code>.</td>
                    <td colspan="1">No</td>
                </tr>
                <tr>
                    <td colspan="1">collate</td>
                    <td colspan="3">Set of rules for comparing characters in a character set. The default value for collate is <code>utf8_general_ci</code>.</td>
                    <td colspan="1">No</td>
                </tr>
                <tr>
                    <td colspan="1" rowspan="4">User</td>
                    <td colspan="1">name</td>
                    <td colspan="3">Specifies user name for the database on instance creation. Refer to <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createUser__version___accountId__instances__instanceId__users_user_management.html"
                        >Create user</link> for the required json format.</td>
                    <td colspan="1">No</td>
                </tr>
                <tr>
                    <td colspan="1">password</td>
                    <td colspan="3">Specifies password for those users on instance creation. Refer to <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createUser__version___accountId__instances__instanceId__users_user_management.html"
                        >Create user</link> for the required json format.</td>
                    <td colspan="1">No</td>
                </tr>
                <tr>
                    <td colspan="1">(database) name</td>
                    <td colspan="3">Specifies names of databases that those users can access on instance creation. Refer to <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createUser__version___accountId__instances__instanceId__users_user_management.html"
                        >Create user</link> for the required json format.</td>
                    <td colspan="1">No</td>
                </tr>
                <tr>
                    <td colspan="1">host</td>
                    <td colspan="3">Specifies the host from which a user is allowed to connect to the database. Possible values are a string containing an IPv4 address or "%" to allow connecting from any host.
                        Refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user_access_restrict_by_host-dle387.html"
                            >User access restriction by host</link> for details. If <code>host</code> is not specified, it defaults to "%".</td>
                    <td colspan="1">No</td>
                </tr>
                <tr>
                    <td colspan="1" rowspan="1">Restore</td>
                    <td colspan="1">restorePoint</td>
                    <td colspan="3"><para>Specifies the backup id from which to restore the database instance.</para>
                        <note><itemizedlist spacing="compact">
                            <listitem>
                                <para>When you execute the Restore Backup operation, a new database instance is created to store the backup whose id is specified by
                                    the <code>restorePoint</code> attribute.</para>
                            </listitem>
                            <listitem>
                                <para>All users/passwords/access that were on the instance at the time of the backup will be restored along with the databases.</para>
                            </listitem>
                            <listitem>
                                <para>You can create new users or databases if you want, but they cannot be the same as the ones from the instance that was backed up.</para>
                            </listitem>
                            <listitem>
                                <para>Refer to the Create Database Instance Restore Request and Response examples for the required json format and details.</para>
                            </listitem>
                        </itemizedlist></note></td>
                    <td colspan="1">No</td>
                </tr>
            </tbody>
        </table>

        <para>Refer to <link
            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/database_instance_status.html"
            >Database instance status</link> for a list of possible database instance statuses that may be returned.</para>

    </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-request.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc title="Create database instance restore request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance restore request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-restore-request.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc title="Create database instance configuration request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance configuration request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-config-request.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc title="Create database instance datastore request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance datastore request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-datastore-request.json"/>
                </doc>
            </representation>

        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-response.json"/>
                    <para xmlns="http://docbook.org/ns/docbook">For convenience, notice in the response examples above that resources contain links to themselves. This allows a client to easily obtain
                        resource URIs rather than to construct them. There are two kinds of link relations
                        associated with resources. A <code>self</code> link contains a <emphasis>versioned</emphasis> link to the resource. These
                        links should be used in cases where the link will be followed immediately. A <code>bookmark</code>
                        link provides a permanent link to a resource that is appropriate for long term storage.</para>
                </doc>
            </representation>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc title="Create database instance restore response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance restore response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-restore-response.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc title="Create database instance config response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance configuration response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-config-response.json"/>
                    <para xmlns="http://docbook.org/ns/docbook">Notice in the response example above the configuration named "MySQL Tuned Config" is returned in the response.</para>
                </doc>
            </representation>

            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc title="Create database instance datastore response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance datastore response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-datastore-response.json"/>
                </doc>
            </representation>

        </response>
    &commonFaults;
    &getFaults;
    </method>

    <method name="DELETE" id="deleteInstance">
        <wadl:doc xml:lang="EN" title="Delete database instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Deletes the specified database instance.</para>
            <para>This operation deletes the specified database instance, including any associated data.</para>
            <para>Refer to <link
                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/database_instance_status.html"
                >Database instance status</link> for a list of possible database instance statuses that may be returned.</para>
            <note><para>This operation is not allowed when the instance status is <code>BUILD</code>.</para></note>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete database instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-delete-instance-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202" >
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json" element="dbaas:unprocessableEntity">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete database instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-delete-instance-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getInstance">
        <wadl:doc xml:lang="EN" title="List all database instances"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists the status and information for all database instances.</para>
            <para>This operation lists the status and information for all database instances.</para>
            <para>This operation lists the sources and replicas part for HA database instances.</para>
            <para>Refer to <link
                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/database_instance_status.html"
                >Database instance status</link> for a list of possible database instance statuses that may be returned.</para>
        </wadl:doc>
        <request>
            <param style="query" type="string" name="include_replicas"
                required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN"><para>When <code>include_replicas</code> is set to <code>false</code>, the replica instances are filtered out of the response.</para></wadl:doc>
            </param>
            <param style="query" type="string" name="include_ha"
                required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN">
                    <para>
                        When <code>include_ha</code> is set to <code>false</code>, the HA instances are filtered out of the response.
                    </para>
                </wadl:doc>
            </param>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all database instances request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instances-index-request.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc title="List all sources and replicas part of an HA instance request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all sources and replicas part of an HA instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instances-ha-mysql-request.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc title="List all instances and filter out instances part of an HA setup request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all instances and filter out instances part of an HA setup request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instances-ha-mysql-filter-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all database instances response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instances-index-response.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc title="List all sources and replicas part of an HA instance response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all sources and replicas part of an HA instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instances-ha-mysql-response.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc title="List all instances and filter out instances part of an HA setup response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all instances and filter out instances part of an HA setup response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instances-ha-mysql-filter-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>

    <method name="PUT" id="updateInstance">
        <wadl:doc xml:lang="EN" title="Update database instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Associates a specified database instance with a <glossterm>configuration group</glossterm>.</para>
            <para>This operation associates a specified database instance with a configuration group.</para>
            <para><remark>Reviewer: should the description note that this can be used for attaching or detaching configurations from an instance?</remark></para>

            <note><para>If any of the parameters in the configuration require a restart, then you will need to reboot the Database instance after associating the configuration.
                You can call the API operation List Configuration Parameters to find out which of the configuration parameters require a restart.</para></note>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Update database instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-detach-from-instance-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
               element="dbaas:DatabaseInstance" >
              <doc>
                  <para xmlns="http://docbook.org/ns/docbook">The following example shows the Update database instance response:</para>
                  <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-detach-from-instance-response.json"/>
              </doc>
            </representation>
        </response>

        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getInstanceById">
        <wadl:doc xml:lang="EN" title="List database instance status and details"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists status and details for a specified database instance.</para>
            <para>This operation lists the status and details of the specified database instance. <phrase>The operation also lists
                the <glossterm>configuration group</glossterm> id/name if the running instance has been associated with a configuration group.</phrase>
            For HA instances, lists details for the source instance part or the replica instance part, depending on the ID specified.
            </para>

            <para>This operation lists the volume size in gigabytes (GB) and the approximate GB used.</para>
            <note><para>After instance creation, the <code>used</code> size of your volume will be
                greater than 0. This is expected and due to the automatic creation of
                non-empty transaction logs for database optimization. The <code>used</code> attribute is <emphasis>not</emphasis> returned
                in the response when the status for the instance is BUILD, REBOOT, RESIZE, or ERROR.</para> </note>
            <para>Refer to <link
                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/database_instance_status.html"
                >Database instance status</link> for a list of possible database instance statuses that may be returned.</para>
            <para>The list operations return a DNS-resolvable hostname associated with the database instance instead of an IP address. Since the hostname always resolves to the correct IP address of the database instance, this relieves the user from the task of maintaining the mapping. Note that although the IP address may likely change on resizing, migrating, and so forth, the hostname always resolves to the correct database instance.</para>
        </wadl:doc>
        <request>
                <representation mediaType="application/json">
                    <doc>
                        <para xmlns="http://docbook.org/ns/docbook">The following example shows the List database instance status and details request:</para>
                        <xsdxt:code href="../apidocs/src/resources/samples/db-instance-status-detail-request.json"/>
                    </doc>
                </representation>

                <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                   <doc title="List database instance status and details with configuration request: JSON">
                       <para xmlns="http://docbook.org/ns/docbook">The following example shows the List database instance status and details with configuration request:</para>
                       <xsdxt:code href="../apidocs/src/resources/samples/db-instance-status-detail-request.json"/>
                   </doc>
                </representation>

            <representation mediaType="application/json">
                <doc title="List details of a source instance in an HA setup request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List database instance status and details of a source instance in an HA setup request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-w-ha-sql-status-detail-request.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json">
                <doc title="List details of a replica instance in an HA setup request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List database instance status and details of a replica instance in an HA setup request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-w-replica-ha-sql-status-detail-request.json"/>
                </doc>
            </representation>

        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List database instance status and details response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-status-detail-response.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc title="List database instance status and details with configuration response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List database instance status and details with configuration response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-status-detail-config-response.json"/>
                    <para xmlns="http://docbook.org/ns/docbook">Notice in the response example above the configuration named "MySQL Tuned Config" is returned since the instance is associated with that configuration.</para>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc title="List details of a source instance in an HA setup response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List database instance status and details of a source instance in an HA setup response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-w-ha-sql-status-detail-response.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc title="List details of a replica instance in an HA setup response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List database instance status and details of a replica instance in an HA setup response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-w-replica-ha-sql-status-detail-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>

    <!-- Instance Actions -->
    <method name="POST" id="restartInstance">
        <wadl:doc xml:lang="EN" title="Restart instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Restarts the database service on the instance.</para>
            <para>The restart operation will restart only the database service on the instance. Restarting the database service will erase any dynamic configuration settings that you have made within the database service.</para>
            <note><para>The database service will be unavailable until the instance restarts.</para></note>
            <para>This operation returns a 202 Accepted response.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:Restart">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Restart instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-restart-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Restart instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-restart-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
        &postPutFaults;
    </method>

    <method name="POST" id="resizeInstance">
        <wadl:doc xml:lang="EN" title="Resize the instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Resizes the memory of the instance.</para>
            <para>This operation changes the memory size of the instance, assuming a valid flavorRef is provided. Restarts the database service in the process.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json"
                            element="dbaas:Resize">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Resize instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-resize-instance-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Resize instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-resize-instance-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
        &postPutFaults;
    </method>

    <method name="POST" id="resizeVolume">
        <wadl:doc xml:lang="EN" title="Resize the instance volume"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Resizes the <glossterm>volume</glossterm> attached to the Instance.</para>
            <para>This operation supports resizing the attached volume for an instance. It supports only increasing the volume size and does not support decreasing the size.
                The volume size is in gigabytes (GB) and must be an integer.</para>
            <note><para>You cannot increase the volume to a size larger than the API volume size limit specifies.</para></note>
            <para>This operation returns a 202 Accepted response.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json"
                            element="dbaas:Resize">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Resize instance volume request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-resize-volume-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Resize instance volume response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-resize-volume-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
        &postPutFaults;
    </method>

    <!-- Database -->
    <method name="POST" id="createDatabase">
        <wadl:doc xml:lang="EN" title="Create database"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Creates a new <glossterm>database</glossterm> within the specified instance.</para>
            <para>This operation creates a new database within the specified instance.</para>
            <para>The <code>name</code> of the database is a required attribute.</para>
            <para>The following additional attributes can be specified for each database: <code>collate</code> and <code>character_set</code>.</para>

            <table rules="all">
                <caption>Required and optional attributes for Create database</caption>
                <thead>
                    <tr>
                        <td colspan="1">Name </td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1">name</td>
                        <td colspan="3">Specifies the database name for creating the database. Refer to the request examples for the required json format.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">character_set</td>
                        <td colspan="3">Set of symbols and encodings. The default character set is <code>utf8</code>.</td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1">collate</td>
                        <td colspan="3">Set of rules for comparing characters in a character set. The default value for collate is <code>utf8_general_ci</code>.</td>
                        <td colspan="1">No</td>
                    </tr>
                </tbody>
            </table>

            <para>See the database service documentation for information about supported character sets and collations. Refer to <link
                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/Datastore_Types_and_Versions-d1e9263.html"
                >Datastore types and versions</link> for references to the documentation for each database service. For example, for MySQL information see <link
                xlink:href="http://dev.mysql.com/doc/refman/5.1/en/charset-mysql.html"
                >http://dev.mysql.com/doc/refman/5.1/en/charset-mysql.html</link>.</para>


            <note><para>The following database names are reserved and cannot be used for creating databases: lost+found, information_schema, and mysql.</para></note>
            <para>Refer to the following tables for information about characters that are valid/invalid for creating database names.</para>

            <table rules="all" width="40%">
                <caption>Valid characters that can be used in a database name</caption>
                <col width="100%"/>
                <thead>
                    <tr>
                        <td>Character</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Letters (upper and lower cases allowed)</td>
                    </tr>
                    <tr>
                        <td>Numbers</td>
                    </tr>
                    <tr>
                        <td>'@', '?', '#', and spaces are allowed, but <emphasis>not</emphasis> at the beginning and end of the database name</td>
                    </tr>
                    <tr>
                        <td>'_' is allowed anywhere in the database name</td>
                    </tr>
                </tbody>
            </table>

            <table rules="all" width="40%" security="writeronly">
                <?dbfo keep-together="always"?>
                <caption>Characters that <emphasis>cannot</emphasis> be used in a database name</caption>
                <col width="100%"/>
                <thead>
                    <tr>
                        <td>Character</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Single quotes</td>
                    </tr>
                    <tr>
                        <td>Double quotes</td>
                    </tr>
                    <tr>
                        <td>Back quotes</td>
                    </tr>
                    <tr>
                        <td>Semicolons</td>
                    </tr>
                    <tr>
                        <td>Commas</td>
                    </tr>
                    <tr>
                        <td>Backslashes</td>
                    </tr>
                    <tr>
                        <td>Forwardslashes</td>
                    </tr>
                </tbody>
            </table>

            <table rules="all">
                <caption>Length restrictions for database name</caption>
                <thead>
                    <tr>
                        <td>Restriction</td>
                        <td>Value</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Database-name maximum length</td>
                        <td>64</td>
                    </tr>
                </tbody>
            </table>
        </wadl:doc>
        <request>
            <representation mediaType="application/json"
                element="dbaas:Database" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database request:<?rax-fo keep-with-next?></para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-databases-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202" >
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-databases-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>


    <method name="GET" id="getDatabases">
        <wadl:doc xml:lang="EN" title="List databases for instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists databases for the specified instance.</para>
            <para>This operation lists the databases for the specified instance.</para>
            <note><para>This operation returns only the user-defined databases, not the system databases. The system databases (mysql,
                information_schema, lost+found) can only be viewed by a database administrator.</para></note>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List databases for instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-databases-request.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json">
                <doc title="List databases for instance paged request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the <emphasis>paginated</emphasis> List databases for instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-databases-pagination-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Databases" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List databases for instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-databases-response.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json"
                element="dbaas:Databases" >
                <doc title="List databases for instance paged response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the <emphasis>paginated</emphasis> List databases for instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-databases-pagination-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>

    <method name="DELETE" id="deleteDatabase">
        <wadl:doc xml:lang="EN" title="Delete database"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Deletes the specified database.</para>
            <para>This operation deletes the requested database within the specified database instance. Note that all data associated with the database is also deleted.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete database request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-delete-databases-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202" >
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete database response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-delete-databases-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>

    <!-- User -->
    <method name="POST" id="createUser">
        <wadl:doc xml:lang="EN" title="Create user"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Creates a user for the specified database instance.</para>
            <para>This operation asynchronously provisions a new user for the specified database instance based on the configuration defined in the request object. Once the request is validated and progress has started on the provisioning process, a 202 Accepted response object is returned.</para>
            <remark>Writer: please add the following note back into the doc once the List User Details call is added back into the API: Using the identifier, the caller can check on the progress of the operation by performing a GET on users/name (for more details on this operation see the "List User Details" section of this document).</remark>
            <para>If the corresponding request cannot be fulfilled due to insufficient or invalid data, an HTTP 400 "Bad Request" error response is returned with information regarding the nature of the failure. Failures in the validation process are non-recoverable and require the caller to correct the cause of the failure and POST the request again.</para>

            <para>The following table lists the required and optional attributes for Create User. Refer to the request examples for the required json format:</para>

            <table rules="all" width="500">
                <caption>Required and optional attributes for Create user</caption>

                <thead>
                    <tr>
                        <td colspan="1">Applies To</td>
                        <td colspan="1">Name </td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1" rowspan="4">User</td>
                        <td colspan="1">name</td>
                        <td colspan="3">Name of the user for the
                            database.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">password</td>
                        <td colspan="3">User password for database
                            access.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">(database) name</td>
                        <td colspan="3"><para>Name of the database that the user can access.</para></td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1">host</td>
                        <td colspan="3">Specifies the host from which a user is allowed to connect to the database. Possible values are a string containing an IPv4 address or "%" to allow connecting from any host.
                            Refer to <link
                                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user_access_restrict_by_host-dle387.html"
                                >User access restriction by host</link> for details. If <code>host</code> is not specified, it defaults to "%".</td>
                        <td colspan="1">No</td>
                    </tr>
                </tbody>
            </table>

            <note><itemizedlist>
                <listitem>
                    <para>A user is granted all privileges on the specified databases.</para>
                </listitem>
                <listitem>
                    <para>The following user name is reserved and cannot be used for creating users: root.</para>
                </listitem>
            </itemizedlist></note>

            <para>Refer to the following tables for information about characters that are valid/invalid for creating database names, user names, and passwords.</para>

            <table rules="all" width="40%">
                <caption>Valid characters that can be used in a database name, user name, and password</caption>
                <col width="100%"/>
                <thead>
                    <tr>
                        <td>Character</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Letters (upper and lower cases allowed)</td>
                    </tr>
                    <tr>
                        <td>Numbers</td>
                    </tr>
                    <tr>
                        <td>'@', '?', '#', and spaces are allowed, but <emphasis>not</emphasis> at the beginning and end of the database name, user name, and password</td>
                    </tr>
                    <tr>
                        <td>'.' is allowed, but must be escaped by replacing it with "%2E" before URL encoding occurs if it occurs in GET, DELETE,
                            and PUT calls, where such a name is the last section of the request URL. Please refer to the Warning in <link
                                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user_access_restrict_by_host-dle387.html"
                                >User access restriction by host</link> for details and an example.
                        </td>
                    </tr>
                    <tr>
                        <td>"_" is allowed anywhere in the database name, user name, and password</td>
                    </tr>
                </tbody>
            </table>

            <table rules="all" width="40%" security="writeronly">
                <caption>Characters that <emphasis>cannot</emphasis> be used in a database name, user name, and password</caption>
                <col width="100%"/>
                <thead>
                    <tr>
                        <td>Character</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Single quotes</td>
                    </tr>
                    <tr>
                        <td>Double quotes</td>
                    </tr>
                    <tr>
                        <td>Back quotes</td>
                    </tr>
                    <tr>
                        <td>Semicolons</td>
                    </tr>
                    <tr>
                        <td>Commas</td>
                    </tr>
                    <tr>
                        <td>Backslashes</td>
                    </tr>
                    <tr>
                        <td>Forwardslashes</td>
                    </tr>
                    <tr>
                        <td>Spaces at the front or end of the user name or password</td>
                    </tr>
                </tbody>
            </table>

            <table rules="all">
                <caption>Length restrictions for database name, user name, and password</caption>
                <thead>
                    <tr>
                        <td>Restriction</td>
                        <td>Value</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Database name maximum length</td>
                        <td>64</td>
                    </tr>
                    <tr>
                        <td>User name maximum length</td>
                        <td>16</td>
                    </tr>
                    <tr>
                        <td>Password maximum length</td>
                        <td>unlimited (no restrictions)</td>
                    </tr>
                </tbody>
            </table>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:Users">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create user request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-users-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202" >
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create user response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-users-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>


    <method name="GET" id="getUsers">
        <wadl:doc xml:lang="EN" title="List users in database instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists the users in the specified database instance.</para>
            <para>This operation lists the users in the specified database instance, along with the associated databases for that user. </para>
            <note><para>This operation does not return the system users (database administrators that administer the health of the database).
                Also, this operation returns the "root" user only if "root" user has been enabled.</para></note>

            <para>The following notes apply to database users:</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>User names can be up to 16 characters long.</para>
                </listitem>
                <listitem>
                    <para>When you create accounts with INSERT, you must use FLUSH PRIVILEGES to tell the server to reload the grant tables.</para>
                </listitem>
                <listitem>
                    <para>For additional information, refer to: <link
                        xlink:href="http://dev.mysql.com/doc/refman/5.1/en/user-account-management.html"
                        >http://dev.mysql.com/doc/refman/5.1/en/user-account-management.html</link></para>
                </listitem>
            </itemizedlist>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List users in database instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-users-request.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json">
                <doc title="List users in database instance paged request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the <emphasis>paginated</emphasis> List users in database instance requests to return a limit of two users at a time (<code>users?limit=2</code>):</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-users-pagination-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Users" >
                <doc title="List users in database instance response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List users in database instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-users-response.json"/>
                    <para xmlns="http://docbook.org/ns/docbook">Refer to <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user_access_restrict_by_host-dle387.html"
                        >User access restriction by host</link> for a description of the <code>host</code> field.</para>
                </doc>
            </representation>

            <representation mediaType="application/json"
                element="dbaas:Users" >
                <doc title="List users in database instance paged response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the <emphasis>paginated</emphasis> List users in database instance response.</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-users-pagination-response.json"/>
                    <para xmlns="http://docbook.org/ns/docbook">Note that the response contains the link (<code>href</code>) to the next set of users in the list (<code>users?marker=dbuser2%4010.0.0.1&amp;limit=2</code>), so using that link for the request will return the next two users in the list after <code>dbuser2%4010.0.0.1</code>.</para>
                </doc>
            </representation>

        </response>
    &commonFaults;
    &getFaults;
    </method>

    <method name="PUT" id="changePass">
        <wadl:doc xml:lang="EN" title="Change user(s) password"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Changes the database password of one or more users.</para>
            <para>This operation changes the database password of one or more users. </para>
            <note><para>For information about choosing a valid password, please refer to
                <link
                    xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createUser__version___accountId__instances__instanceId__users_user_management.html"
                    >Create user</link> for details.</para></note>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:Users">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Change user(s) password request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-change-users-password-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Users" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Change user(s) password response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-change-users-password-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>


    <method name="DELETE" id="deleteUser">
        <wadl:doc xml:lang="EN" title="Delete user"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Deletes the user identified by {name} for the specified database instance.</para>
            <para>This operation deletes the specified user for the specified database instance.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete user request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-delete-users-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202" >
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete user response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-delete-users-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>

    <method name="GET" id="listUser">
        <wadl:doc xml:lang="EN" title="List user"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists the specified user's name and a list of databases that the user can access.</para>
            <para>This operation lists the specified user's name and a list of databases that the user can access.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List user request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-user-dbs-request.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json">
                <doc title="List user access for restricted host request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List user for restricted host request.</para>
                    <para xmlns="http://docbook.org/ns/docbook">This example shows using the host parameter syntax (user@host) to restrict the user to connecting from a particular host for the call.
                        In this example, user@host has been URL encoded by the client, so the parameter dbuser1@% is URL encoded to dbuser1%40%25, since the '@' is 40 hex and the '%' is 25 hex. In this case, since % is used for the host, the user can connect from any host:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-get-user-with-host-request.json"/>
                </doc>
            </representation>

        </request>
        <response status="200" >
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List user responses:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-user-dbs-response.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json">
                <doc title="List user access for restricted host response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List user for restricted host response.</para>
                    <para xmlns="http://docbook.org/ns/docbook">This example shows using the host parameter syntax (user@host) to restrict the user to connecting from a particular host for the call.
                        In this example, user@host has been URL encoded by the client, so the parameter dbuser1@% is URL encoded to dbuser1%40%25, since the '@' is 40 hex and the '%' is 25 hex. In this case, since % is used for the host, the user can connect from any host:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-get-user-with-host-response.json"/>
                </doc>
            </representation>

        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getUserAccess">
        <wadl:doc xml:lang="EN" title="List user access"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Shows a list of all databases a user has access to.</para>
            <para>This operation shows a list of all databases a user has access to.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List user access request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-user-access-request.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json">
                <doc title="List user access for restricted host request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List user access for restricted host request.</para>
                    <para xmlns="http://docbook.org/ns/docbook">This example shows using the host parameter syntax (user@host) to restrict the user to connecting from a particular host for the call.

                        In this example, user@host has been URL encoded by the client, so the parameter dbuser2@10.0.0.1 is URL encoded in the request example to dbuser2%4010%252E0%252E0%252E1 to escape the periods in the host component of the name
                        (refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user_access_restrict_by_host-dle387.html"
                            >User access restriction by host</link> for details):</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-get-user-access-with-host-request.json"/>
                </doc>
            </representation>

        </request>
        <response status="200" >
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List user access response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-user-access-response.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json">
                <doc title="List user access for restricted host response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List user access for restricted host response.</para>
                    <para xmlns="http://docbook.org/ns/docbook">This example shows the results of using the host parameter syntax (user@host) to restrict the user to connecting from a particular host for the call.

                        In this example, user@host has been URL encoded by the client, so the parameter dbuser2@10.0.0.1 is URL encoded in the request example to dbuser2%4010%252E0%252E0%252E1 to escape the periods in the host component of the name
                        (refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user_access_restrict_by_host-dle387.html"
                            >User access restriction by host</link> for details):</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-get-user-access-with-host-response.json"/>
                </doc>
            </representation>

        </response>

        &commonFaults;
        &getFaults;
    </method>

    <method name="PUT" id="grantUserAccess">
        <wadl:doc xml:lang="EN" title="Grant user access"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Grants access for the specified user to one or more databases for the specified instance.</para>
            <para>This operation grants access for the specified user to one or more databases for the specified instance.
                The user is granted ALL privileges on the database. Refer to the information at the beginning of <link
                    xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user_management.html"
                    >Users</link>
                for more details on access.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:Database">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Grant user access request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-grant-user-access-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202" >
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Grant user access response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-grant-user-access-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="DELETE" id="revokeUserAccess">
        <wadl:doc xml:lang="EN" title="Revoke user access"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Removes access to the specified database for the specified user.</para>
            <para>This operation removes access to the specified database for the specified user.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Revoke user access request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-revoke-user-access-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202" >
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Revoke user access response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-revoke-user-access-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <!-- Get Default Config -->
    <method name="GET" id="getDefaultConfig">
        <wadl:doc xml:lang="EN" title="Get default configuration"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists the default configuration settings from the template that were applied to the specified instance.</para>
            <para>This operation lists the default configuration settings from the template that were applied to the specified instance.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Get default configuration request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-get-instance-default-config-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>

            <representation mediaType="application/json"
                element="dbaas:DefaultConfig">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Get default configuration response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-get-instance-default-config-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <!-- Root -->
    <method name="POST" id="createRoot">
        <wadl:doc xml:lang="EN" title="Enable root user"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Enables the root user for the specified database instance and returns the root password.</para>
            <para>This operation enables login from any host for the root user and provides the user with a generated root password.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Enable root user request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-enable-root-user-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>

            <representation mediaType="application/json"
                element="dbaas:User">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Enable root user response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-enable-root-user-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>

    <method name="GET" id="isRootEnabled">
        <wadl:doc xml:lang="EN" title="List root-enabled status"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Returns true if root user is enabled for the specified database instance or false otherwise.</para>
            <para>This operation checks an active specified database instance to see if root access is enabled. It returns True if root user is enabled for the specified database instance or False otherwise.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Check root user access request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-check-root-user-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:RootEnabled" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example show the Check root user access response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-check-root-user-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>

    <!-- Flavor -->
    <method name="GET" id="getFlavors">
        <wadl:doc xml:lang="EN" title="List flavors" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists information for all available <glossterm baseform="flavor">flavors</glossterm>.</para>
            <para>This operation lists information for all available flavors.</para>
            <para>This resource is identical to the flavors found in the OpenStack Nova API, but without the disk property.</para>

            <para>The larger 32GB and 64GB flavors are available in all US and UK datacenters.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List flavors request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-flavors-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Flavors" >
                <doc>
                    <?hard-pagebreak?>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List flavors response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-flavors-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>



    <method name="GET" id="getFlavorById">
        <wadl:doc xml:lang="EN" title="List flavor by ID" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists all flavor information about the specified flavor ID.</para>
            <para>This operation lists all information for the specified flavor ID with details of the RAM.</para>
            <para>This resource is identical to the flavors found in the OpenStack Nova API, but without the disk property.</para>
            <note><para>The flavorId parameter should be an integer. If a floating point value is used for the flavorId parameter,
                the decimal portion is truncated and the integer portion is used as the value of the flavorId.</para></note>
            <remark>Reviewer / Writer: need to confirm that this behavior is not changed in subsequent releases, and if it is prevented, remove the Note above.</remark>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List flavor by ID request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-flavors-by-id-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Flavor" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List flavor by ID response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-flavors-by-id-response.json"/>
                </doc>
            </representation>
        </response>
    &commonFaults;
    &getFaults;
    </method>

<!-- On Demand Backups -->

    <method name="POST" id="createBackup">
        <wadl:doc xml:lang="EN" title="Create backup" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Creates a new <glossterm>backup</glossterm> for a database instance.</para>
            <para>This operation asynchronously creates a new <glossterm>backup</glossterm> for the specified database instance.
                This call requires the user to specify an instance ID to backup and a name for the backup. </para>
            <para>The following table lists the required and optional attributes for Create Backup:</para>

           <table rules="all">
               <caption>Required and optional attributes for Create backup</caption>
               <thead>
                   <tr>
                       <td colspan="1">Name</td>
                       <td colspan="3">Description</td>
                       <td colspan="1">Required</td>
                   </tr>
               </thead>
               <tbody>
                   <tr>
                       <td colspan="1">name</td>
                       <td colspan="3"><para>Specifies the short name of the backup.</para></td>
                       <td colspan="1">Yes</td>
                   </tr>
                   <tr>
                       <td colspan="1">instance</td>
                       <td colspan="3"><para>Specifies the database instanceId to backup.</para></td>
                       <td colspan="1">Yes</td>
                   </tr>
                   <tr>
                       <td colspan="1">description</td>
                       <td colspan="3"><para>Specifies a long description of the backup.</para></td>
                       <td colspan="1">No</td>
                   </tr>
                   <tr>
                       <td colspan="1">parent_id</td>
                       <td colspan="3"><para>Specifies the backupId from which to create an incremental backup.</para></td>
                       <td colspan="1">No</td>
                   </tr>
               </tbody>
           </table>

            <table rules="all">
                <caption>Length restrictions for backup <code>name</code> parameter</caption>
                <thead>
                    <tr>
                        <td colspan="3">Restriction</td>
                        <td colspan="1">Value</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="3"><para>name maximum length</para></td>
                        <td colspan="1">64</td>
                    </tr>
                </tbody>
            </table>
            <note>
                <itemizedlist>
                    <listitem><para>During the backup process, database writes on MyISAM Databases will be disabled.
                        InnoDB Databases will continue to allow all operations.</para>
                    </listitem>
                    <listitem><para>While the instance is being backed up you will not be able to add/delete databases, add/delete users, or delete/stop/reboot the instance.</para>
                    </listitem>
                    <listitem><para>Users can only run one backup at a time. Duplicate requests will receive a 422 error.</para>
                    </listitem>
                    <listitem><para>Backups are not deleted when the instance is deleted. You must manually remove any backups created using the Backups API. Refer to <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/DELETE_deleteBackup__version___accountId__backups__backupId__backups.html"
                        >Delete backup</link> for details.</para>
                    </listitem>
                    <listitem><para>During backup the files will be streamed to your Cloud Files account.
                        The process creates a container called <code>z_CLOUDDB_BACKUPS</code> and places all the files in it.
                        In order for the restore and deletion of backups to work properly, you should not move, rename, or delete any of the files from this container.
                        You will be charged the normal Cloud Files rate for storage of these files. For pricing details, refer to <link xmlns="http://docbook.org/ns/docbook"
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/Pricing_SLA-d1e1362.html"
                            >http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/Pricing_SLA-d1e1362.html</link>
                        No additional Cloud Databases fee applies for creating backups.
                        You can delete old backups through the API. Refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/DELETE_deleteBackup__version___accountId__backups__backupId__backups.html"
                            >Delete backup</link> for details.</para>
                    </listitem>
                    <listitem><para>In the unlikely event that the backup fails to perform correctly and is in the state <code>FAILED</code>,
                        there may be some files that were placed in the container.
                        You should use the API to delete the backup to remove any leftover files. Refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/DELETE_deleteBackup__version___accountId__backups__backupId__backups.html"
                            >Delete backup</link> for details.</para>
                    </listitem>
                    <listitem><para>If a backup is deleted, all incremental backups created from it will also be deleted.</para>
                    </listitem>
                    <listitem><para>You can create an incremental backup from another incremental backup.
                        There is no limit to how many nested backups you can create, however the chances of
                        a restore failure increase with the number of nested backups you create.</para>
                    </listitem>
                </itemizedlist></note>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:Backup">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create backup request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-request.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json" element="dbaas:Backup">
                <doc title="Create incremental backup request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create incremental backup request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-incremental-request-json-http.txt"/>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-incremental-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Backup" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create backup response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-response.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json" element="dbaas:Backup">
                <doc title="Create incremental backup response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create incremental backup response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-incremental-response-json-http.txt"/>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-incremental-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="POST" id="createBackupForHaInstance">
        <wadl:doc xml:lang="EN" title="Create backup for an HA Instance" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Creates a new <glossterm>backup</glossterm> for the specified HA instance.</para>
            <para>This operation asynchronously creates a new <glossterm>backup</glossterm> for the specified HA instance.
                This call requires the user to specify an HA ID to backup and a name for the backup. </para>
            <para>The following table lists the required and optional attributes for Create Backup for an HA Instance:</para>

            <table rules="all">
                <caption>Required and optional attributes for Create backup</caption>
                <thead>
                    <tr>
                        <td colspan="1">Name</td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1">name</td>
                        <td colspan="3"><para>Specifies the short name of the backup.</para></td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">instance</td>
                        <td colspan="3"><para>Specifies the database instanceId to backup.
                            But since we would need to create a backup of the entire HA group,
                            the value of this field should be empty.</para></td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">description</td>
                        <td colspan="3"><para>Specifies a long description of the backup.</para></td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1">parent_id</td>
                        <td colspan="3"><para>Specifies the backupId from which to create an incremental backup.</para></td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1">source</td>
                        <td colspan="3"><para>Specifies the source type (instance/ha) and source id (instanceID/haID).</para></td>
                        <td colspan="1">Yes (to create HA group backups)</td>
                    </tr>
                </tbody>
            </table>

            <table rules="all">
                <caption>Length restrictions for backup <code>name</code> parameter</caption>
                <thead>
                    <tr>
                        <td colspan="3">Restriction</td>
                        <td colspan="1">Value</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="3"><para>name maximum length</para></td>
                        <td colspan="1">64</td>
                    </tr>
                </tbody>
            </table>
            <note>
                <itemizedlist>
                    <listitem><para>To list, show details of a HA backup, refer to the following: <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/GET_getBackups__version___accountId__backups_backups.html"
                        >List backups</link> and <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/GET_getBackupById__version___accountId__backups__backupId__backups.html"
                            >List backups by ID</link>.</para>
                    </listitem>
                    <listitem><para>To list backups for a specified HA instance, refer to <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/GET_getBackupsForHaInstance__version___accountId__ha__haId__backups_backups.html"
                        >List backups of an HA instance</link>.</para>
                    </listitem>
                    <listitem><para>While creating a backup of a HA Instance, the backup of the latest replica instance (the one closest to the source) is taken.</para>
                    </listitem>
                    <listitem><para>The HA instance goes into a <code>BACKUP</code> state if it has a running backup.</para>
                    </listitem>
                    <listitem><para>Backups are not deleted when the instance is deleted. You must manually remove any backups created using the Backups API. Refer to <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/DELETE_deleteBackup__version___accountId__backups__backupId__backups.html"
                            >Delete backup</link> for details.</para>
                    </listitem>
                    <listitem><para>During backup the files will be streamed to your Cloud Files account. The process creates a container called
                        z_CLOUDDB_BACKUPS and places all the files in it. In order for the restore and deletion of backups to work properly,
                        you should not move, rename, or delete any of the files from this container. You will be charged the normal Cloud Files
                        rate for storage of these files. For pricing details, refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/Pricing_SLA-d1e1362.html"
                            >http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/Pricing_SLA-d1e1362.html</link>
                        No additional Cloud Databases fee applies for creating backups. You can delete old backups through the API.
                        For details see <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/DELETE_deleteBackup__version___accountId__backups__backupId__backups.html"
                            >Delete backup</link>.</para>
                    </listitem>
                    <listitem><para>In the unlikely event that the backup fails to perform correctly and is in the state <code>FAILED</code>,
                        there may be some files that were placed in the container.
                        You should use the API to delete the backup to remove any leftover files. Refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/DELETE_deleteBackup__version___accountId__backups__backupId__backups.html"
                            >Delete backup</link> for details.</para>
                    </listitem>


                    <listitem><para>If a backup is deleted, all incremental backups created from it will also be deleted.</para>
                    </listitem>
                </itemizedlist></note>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:Backup">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create backup of an HA instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-ha-request.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json" element="dbaas:Backup">
                <doc title="Create incremental backup request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create incremental backup request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-incremental-ha-request-json-http.txt"/>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-incremental-ha-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Backup" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create backup response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-ha-response.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json" element="dbaas:Backup">
                <doc title="Create incremental backup response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create incremental backup response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-incremental-ha-response-json-http.txt"/>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-incremental-ha-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getBackups">
        <wadl:doc xml:lang="EN" title="List backups" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists all backups for all database instances.</para>
            <para>This operation returns a list of all backups for all database instances.</para>
            <para>You can filter by datastore type using the <emphasis>datastore</emphasis> query parameter.</para>
        </wadl:doc>
        <request>
            <param style="query" type="string" name="datastore"
                required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN"><para>The type of the datastore by which to filter.</para></wadl:doc>
            </param>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List backups request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-list-request.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc title="List backups query request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List backups query request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-list-query-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Backup" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List backups response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-list-response.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json"
                element="dbaas:Backup" >
                <doc title="List backups query response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List backups query response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-list-query-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getBackupById">
        <wadl:doc xml:lang="EN" title="List backup by ID" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists details about a specified backup.</para>
            <para>This operation lists the details for a specified backup.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List backup by ID request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-get-request.json"/>
                </doc>
            </representation>
        </request>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Show details of an HA instance backup by ID request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-ha-get-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Backup" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List backup by ID response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-get-response.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json"
                element="dbaas:Backup" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Show details of an HA instance backup by ID response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-ha-get-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getBackupsByInstance">
        <wadl:doc xml:lang="EN" title="List backups for instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists all backups for a specified instance.</para>
            <para>This operation lists all backups for a specified instance.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List backups for instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backups-by-instance-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Backup" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List backups for instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backups-by-instance-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="POST" id="restoreBackup">
        <wadl:doc xml:lang="EN" title="Restore backup" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Creates a new database instance from a <glossterm>backup</glossterm>.</para>
            <para>This operation restores a backup onto a new database instance.</para>

            <para>The following table lists the required and optional attributes for RestorePoint:</para>

            <table rules="all">
                <caption>Required and optional attributes for RestorePoint</caption>
                <thead>
                    <tr>
                        <td colspan="1">Name</td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1">backupRef</td>
                        <td colspan="3"><para>Specifies the id of the backup to restore.</para></td>
                        <td colspan="1">Yes</td>
                    </tr>
                </tbody>
            </table>

            <note><itemizedlist>
                <listitem>
                    <para>Refer to <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createInstance__version___accountId__instances_Database_Instances.html"
                        >Create instance</link>
                        for details on other options available during the creation of a new instance.</para>
                </listitem>
                <listitem>
                    <para>All users/passwords/access that were on the instance at the time of the backup will be restored along with the databases.
                        You can create new users or databases if you want, but they cannot be the same as the ones from the instance that was backed up. </para>
                </listitem>
                <listitem>
                    <para>You can restore from an incremental backup the same as from a full backup. The system automatically restores all parents first,
                        and then applies the incremental backup.</para>
                </listitem>
            </itemizedlist></note>

        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Restore backup request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-restore-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Restore backup response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-restore-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>


    <method name="DELETE" id="deleteBackup">
        <wadl:doc xml:lang="EN" title="Delete backup"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Deletes the specified backup.</para>
            <para>This operation deletes the specified backup. <phrase>When a backup is deleted, all incremental backups created from it will also be deleted.</phrase></para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete backup request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-delete-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202" >
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json" element="dbaas:unprocessableEntity">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete backup response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-delete-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>


<!-- Automated Backups -->

    <method name="POST" id="createAutoBackup">
        <wadl:doc xml:lang="EN" title="Create scheduled backup" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Creates a schedule for running a <glossterm>backup</glossterm> periodically.</para>
            <para>This operation asynchronously creates a new schedule for running a <glossterm>backup</glossterm> periodically.
                This call requires the user to specify an instance ID to backup and the date/time when the backup should be made. </para>
            <para>The following table lists the required and optional attributes for Create Backup:</para>

            <table rules="all">
                <caption>Required and optional attributes for Create scheduled backup</caption>
                <thead>
                    <tr>
                        <td colspan="1">Name</td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1">action</td>
                        <td colspan="3"><para>The scheduled action: <code>backup</code>.</para></td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">day_of_week</td>
                        <td colspan="3"><para>The day of the week. Sunday is <code>0</code>.</para></td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">hour</td>
                        <td colspan="3"><para>The hour of the day. Midnight is 0.</para></td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">minute</td>
                        <td colspan="3"><para>The minute of the hour.</para></td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">instance</td>
                        <td colspan="3"><para>The database instanceId to backup.</para></td>
                        <td colspan="1">Yes</td>
                    </tr>
                </tbody>
            </table>

            <para>The <code>day_of_week</code> attribute specifies the day in which a full backup will be made.
                After that day, the schedule will automatically run daily incremental backups until the next full backup.</para>

            <note>
                <itemizedlist>
                    <listitem><para>During the backup process, database writes on MyISAM Databases will be disabled.
                        InnoDB Databases will continue to allow all operations.</para>
                    </listitem>
                    <listitem><para>While the instance is being backed up you will not be able to add/delete databases, add/delete users, or delete/stop/reboot the instance.</para>
                    </listitem>
                    <listitem><para>Users can only run one backup at a time. Duplicate requests will receive a 422 error.</para>
                    </listitem>
                    <listitem><para>Backups are not deleted when the instance is deleted. You must manually remove any backups created using the Backups API. Refer to <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/DELETE_deleteBackup__version___accountId__backups__backupId__backups.html"
                        >Delete backup</link> for details.</para>
                    </listitem>
                    <listitem><para>During backup the files will be streamed to your Cloud Files account.
                        The process creates a container called <code>z_CLOUDDB_BACKUPS</code> and places all the files in it.
                        In order for the restore and deletion of backups to work properly, you should not move, rename, or delete any of the files from this container.
                        You will be charged the normal Cloud Files rate for storage of these files. For pricing details, refer to <link xmlns="http://docbook.org/ns/docbook"
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/Pricing_SLA-d1e1362.html"
                            >http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/Pricing_SLA-d1e1362.html</link>
                        No additional Cloud Databases fee applies for creating backups.
                        You can delete old backups through the API. Refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/DELETE_deleteBackup__version___accountId__backups__backupId__backups.html"
                            >Delete backup</link> for details.</para>
                    </listitem>
                    <listitem><para>In the unlikely event that the backup fails to perform correctly and is in the state <code>FAILED</code>,
                        there may be some files that were placed in the container.
                        You should use the API to delete the backup to remove any leftover files. Refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/DELETE_deleteBackup__version___accountId__backups__backupId__backups.html"
                            >Delete backup</link> for details.</para>
                    </listitem>
                    <listitem><para>If a backup is deleted, all incremental backups created from it will also be deleted.</para>
                    </listitem>
                    <listitem><para>You can create an incremental backup from another incremental backup.
                        There is no limit to how many nested backups you can create, however the chances of
                        a restore failure increase with the number of nested backups you create.</para>
                    </listitem>
                </itemizedlist></note>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:Schedule">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create scheduled backup request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-automated-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Schedule" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create scheduled backup response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-create-automated-response.json"/>
                </doc>
            </representation>

        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getAutomatedBackups">
        <wadl:doc xml:lang="EN" title="List scheduled backups" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists all scheduled backups for all database instances for an account.</para>
            <para>This operation returns a list of all scheduled backups for all database instances for an account.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List scheduled backups request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-list-automated-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Backup" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List scheduled backups response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-list-automated-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getAutomatedBackupById">
        <wadl:doc xml:lang="EN" title="List schedule for running backup by schedule ID" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists schedule for running backup for a specified schedule.</para>
            <para>This operation lists the schedule for running backups for a specified schedule.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List scheduled backup by schedule ID request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-automated-backup-list-by-id-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Backup" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List scheduled backup by schedule ID response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-automated-backup-list-by-id-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="PUT" id="updateAutomatedBackupById">
        <wadl:doc xml:lang="EN" title="Update schedule for backups by schedule ID" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Updates the backup schedule for the specified schedule.</para>
            <para>This operation updates the schedule for running backups for the specified schedule.</para>
            <para>The following table shows the required and optional attributes for Update schedule for backups by schedule ID.</para>
            <table rules="all">
                <caption>Required and optional attributes for Update schedule for backups by schedule ID</caption>
                <thead>
                    <tr>
                        <td colspan="1">Name </td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1">day_of_week</td>
                        <td colspan="3">The day of the week. Sunday is <code>0</code>.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">hour</td>
                        <td colspan="3">The hour of the day. Midnight is <code>0</code>.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">minute</td>
                        <td colspan="3">The minute of the hour..</td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">run_now</td>
                        <td colspan="3">Run the backup immediately.</td>
                        <td colspan="1">No</td>
                    </tr>
                </tbody>
            </table>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Update backup schedule by schedule ID request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-automated-backup-update-by-id-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Backup" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Update backup schedule by schedule ID response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-automated-backup-update-by-id-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="DELETE" id="deleteAutomatedBackupById">
        <wadl:doc xml:lang="EN" title="Delete schedule for running backup by schedule ID" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Deletes schedule for running backups for a specified schedule ID.</para>
            <para>This operation deletes the schedule for running backups for a specified schedule ID.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete schedule for backups by schedule ID request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-automated-backup-delete-by-id-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Backup" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete schedule for backups by schedule ID response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-automated-backup-delete-by-id-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

<!-- Users -->

    <method name="PUT" id="modifyUser">
        <wadl:doc xml:lang="EN" title="Modify user attributes"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Modifies one or more of the following for the specified user: name, password, and host from which the user is allowed to connect to the database. </para>
            <para>This operation modifies one or more of the following for the specified user: user name, password, and host from which the user is allowed to connect to the database.
                User in this case is user or user@host, whichever is appropriate.</para>

            <para>Refer to <link
                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createUser__version___accountId__instances__instanceId__users_user_management.html"
                >Create user</link> for information about the characters that are valid for the user name and password.</para>
            <para>The following table lists attributes for Modify User Attributes. Note that <emphasis>one or more</emphasis> of the attributes must be specified.
                Refer to the request examples for the required json format:</para>

            <table rules="all" width="400">
                <caption>Attributes for Modify user attributes</caption>
                <col width="30%"/>
                <col width="70%"/>
                <thead>
                    <tr>
                        <td>Name</td>
                        <td>Description</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>name</td>
                        <td>Name of the user for the
                            database.</td>
                    </tr>
                    <tr>
                        <td>password</td>
                        <td>User password for database
                            access.</td>
                    </tr>
                    <tr>
                        <td>host</td>
                        <td>Specifies the host from which a user is allowed to connect to the database. Possible values are a string containing an IPv4 address or "%" to allow connecting from any host.
                            Refer to <link
                                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user_access_restrict_by_host-dle387.html"
                                >User access restriction by host</link> for details. If <code>host</code> is not specified, it defaults to "%".
                        </td>
                    </tr>
                </tbody>
            </table>



        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:User">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Modify user attributes request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-change-user-attributes-request.json"/>
                </doc>
            </representation>


        </request>
        <response status="200" >
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Modify user attributes response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-change-user-attributes-response.json"/>
                </doc>
            </representation>


        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getConfigurations">
        <wadl:doc xml:lang="EN" title="List configurations" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists all defined <glossterm>configuration group</glossterm>s for the tenant.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List configurations request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-list-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List configurations response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-list-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="POST" id="createConfiguration">
        <wadl:doc xml:lang="EN" title="Create configuration" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Creates a new <glossterm>configuration group</glossterm> based on the parameters supplied in the request body.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create configuration request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-create-request.json"/>
                    <note xmlns="http://docbook.org/ns/docbook"><para>Each value provided for <code>name</code> and <code>description</code> must
                        be a string composed of 1 to 255 alphanumeric characters. Both uppercase and lowercase alpha characters may be used.</para></note>
                </doc>
                <param name="datastore" style="plain" required="false" type="object" path="$.datastore">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The datastore for the configuration. If omitted, it defaults to MySQL 5.6.</para></wadl:doc>
                </param>
                <param name="type" style="plain" required="false" type="string" path="$.datastore.type">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The type of the datastore for the configuration. If omitted, it defaults to MySQL.</para></wadl:doc>
                </param>
                <param name="version" style="plain" required="false" type="string" path="$.datastore.version">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The version of the datastore for the configuration. If omitted, it defaults to MySQL 5.6.</para></wadl:doc>
                </param>
                <param name="description" style="plain" required="false" type="string" path="$.description">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The description for the configuration.</para></wadl:doc>
                </param>
                <param name="name" style="plain" required="true" type="string" path="$.name">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The name for the configuration.</para></wadl:doc>
                </param>
                <param name="values" style="plain" required="true" type="object" path="$.values">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The values for the configuration. The key value pairs "values" should be in JSON format with no spaces.
                            The key and the value are strings and must be enclosed in double quotation marks. For example: "default_time_zone": "-6:00".
                            Each key value pair should be separated by a comma.</para></wadl:doc>
                </param>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Configuration" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create configuration response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-create-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getConfigurationById">
        <wadl:doc xml:lang="EN" title="List configuration details" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists details for the specified <glossterm>configuration group</glossterm>.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List configuration details request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-details-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Configuration" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List configuration details response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-details-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="PATCH" id="updateSomeConfigParmsById">
        <wadl:doc xml:lang="EN" title="Update some configuration parameters" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Updates some of the <glossterm>configuration parameter</glossterm>s associated with the specified <glossterm>configuration group</glossterm>.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json"
                element="dbaas:Configuration">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Update some configuration parameters request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-edit-parameters-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Configuration" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Update some configuration parameters response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-edit-parameters-response.json"/>
                </doc>
            </representation>
        </response>

        &commonFaults;
        &getFaults;
    </method>

    <method name="PUT" id="replaceAllConfigParmsById">
        <wadl:doc xml:lang="EN" title="Replace all configuration parameters" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Replaces all of the <glossterm>configuration parameter</glossterm>s associated with the specified <glossterm>configuration group</glossterm>.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json"
                element="dbaas:Configuration">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Replace all configuration parameters request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-update-parameters-request.json"/>
                    <note xmlns="http://docbook.org/ns/docbook"><para>Each value provided for <code>name</code> and <code>description</code> must
                        be a string composed of 1 to 255 alphanumeric characters. Both uppercase and lowercase alpha characters may be used.</para></note>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Configuration" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Replace all configuration parameters response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-update-parameters-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;

    </method>

    <method name="DELETE" id="deleteConfigGroup">
        <wadl:doc xml:lang="EN" title="Delete configuration group" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Deletes the specified <glossterm>configuration group</glossterm>. No message body is expected in the request.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete configuration group request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-delete-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
                <representation mediaType="application/json"
                    element="dbaas:Configuration" >
                    <doc>
                        <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete configuration group response:</para>
                        <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-delete-response.json"/>
                    </doc>
                </representation>
        </response>
        &commonFaults;
        &getFaults;

    </method>

    <method name="GET" id="getInstancesForConfiguration">
        <wadl:doc xml:lang="EN" title="List instances for configuration" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists instances that are associated with the specified <glossterm>configuration group</glossterm>.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List instances for configuration request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-list-instances-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Configuration" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List instances for configuration response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-list-instances-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getConfigurationParameters">
        <wadl:doc xml:lang="EN" title="List configuration parameters" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists <glossterm>configuration parameter</glossterm>s that may be configured on the system.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List configuration parameters request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-parameters-for-datastore-version-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Configuration" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List configuration parameters response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-parameters-for-datastore-version-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getConfigurationParameterDetails">
        <wadl:doc xml:lang="EN" title="List configuration parameter details" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists the details of a specified <glossterm>configuration parameter</glossterm> that may be configured on the system.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List configuration parameter details request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-parameter-for-datastore-version-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Configuration" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List configuration parameter details response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-parameter-for-datastore-version-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getConfigurationParameterDetailsWithoutDatastore">
        <wadl:doc xml:lang="EN" title="List configuration parameter details without datastore" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists the details of a specified <glossterm>configuration parameter</glossterm> that may be configured on the system without specifying a datastore.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List configuration parameter details without datastore request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-parameter-without-datastore-version-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Configuration" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List configuration parameter details without datastore response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-parameter-without-datastore-version-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getConfigurationParametersWithoutDatastore">
        <wadl:doc xml:lang="EN" title="List configuration parameters without datastore" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists the <glossterm>configuration parameter</glossterm>s that may be configured on the system without specifying a datastore.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List configuration parameters without datastore request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-parameters-without-datastore-version-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Configuration" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List configuration parameters without datastore response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-configuration-parameters-without-datastore-version-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getVerboseDefaultConfigurationParameters">
        <wadl:doc xml:lang="EN" title="List verbose default configuration parameters" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists the default <glossterm>configuration parameter</glossterm>s for a datastore version flavor.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List verbose default configuration parameters request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-verbose-default-configuration-parameters-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:Configuration" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List verbose default configuration parameters response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-verbose-default-configuration-parameters-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getDatastoreTypes">
        <wadl:doc xml:lang="EN" title="List all datastore types"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists all datastore types.</para>
            <para>This operation lists all datastore types.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all datastore types request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-datastores-list-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all datastore types response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-datastores-list-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getDatastoreTypesById">
        <wadl:doc xml:lang="EN" title="List datastore type"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists datastore type.</para>
            <para>This operation lists datastore type for the specified datastore.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List datastore type request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-datastore-by-id-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List datastore type response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-datastore-by-id-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getDatastoreVersionsById">
        <wadl:doc xml:lang="EN" title="List datastore versions for datastore"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists all datastore versions for the specified datastore.</para>
            <para>This operation lists all datastore versions for the specified datastore.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all datastore versions for datastore request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-datastore-versions-list-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all datastore versions for datastore response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-datastore-versions-list-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getDatastoreVersionByVersionId">
        <wadl:doc xml:lang="EN" title="List datastore version"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists datastore version.</para>
            <para>This operation lists the datastore version for the specified version.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List datastore version request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-datastore-version-by-id-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List datastore version response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-datastore-version-by-id-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getFlavorsByDatastoreVersion">
        <wadl:doc xml:lang="EN" title="List flavors for datastore version"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists flavors for a datastore version.</para>
            <para>This operation lists the flavors for a datastore version.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Lists flavors for datastore version request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-flavors-by-datastore-version-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Lists flavors for datastore version response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-flavors-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <!-- Instance -->
    <method name="POST" id="createReplica">
        <wadl:doc xml:lang="EN" title="Create replica"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Creates a replica of the source instance, as specified by the value of the <code>replica_of</code> attribute.</para>
            <para>This operation asynchronously provisions a replica for the specified source database instance.
                This call requires the user to specify a <glossterm>flavor</glossterm> and a <glossterm>volume</glossterm> size.
                It also requires specifying the source database instance using the <code>replica_of</code> attribute.
                The service then provisions the replica with the requested flavor and sets up a volume of the specified size.</para>
            <note>
              <itemizedlist>
                <listitem><para>The replica will be created with the default configuration.
                    If you wish to apply the same configuration as the source database instance or another configuration,
                    you will need to apply that configuration to the replica.
                    Refer to <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/PUT_updateInstance__version___accountId__instances__instanceId__Database_Instances.html"
                        >Update database instance</link> for details.</para></listitem>
                <listitem>
                    <para>Since the process of creating a replica makes a backup behind the scenes, the user calling the Create replica operation will need access to Cloud Files.</para>
                </listitem>
              </itemizedlist>
            </note>

            <warning>
                <para>Adding a replica will restart the MySQL service on the source database instance.
                    However the state of the instance might not reflect that and still be ACTIVE.
                    Wait for a couple of seconds for the process to be complete.
                    The best way to verify whether the process is complete is to check the slave metrics as described in <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/Monitoring_Read_Replication-d1e3694.html"
                        >Monitoring read replication</link>.</para></warning>
            <note security="writeronly"><title>Notes</title><itemizedlist>
                <listitem>
                    <para>You can create only one database instance per <command>POST</command> request.</para>
                </listitem>
                <listitem>
                    <para>You can create a database instance with one or more databases, and users associated to those databases.</para>
                </listitem>
                <listitem>
                    <para>The default binding for the database instance is port 3306.</para>
                </listitem>
                <listitem>
                    <para>When used with the <code>restorePoint</code> attribute, this call performs the Restore Backup operation, creating a new database instance to store the backup.</para>
                </listitem>
                <listitem>
                    <para>For information about using SSL with your database instance, refer to <link
                        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/Using_SSL_for_Database_Instances.html"
                        >Using SSL with Your Cloud Database Instances</link>.</para>
                </listitem>
            </itemizedlist></note>
            <para>The following table lists the required and optional attributes for Create replica:</para>
            <table rules="all">
                <caption>Required and optional attributes for Create replica</caption>
                <thead>
                    <tr>
                        <td colspan="1">Applies To </td>
                        <td colspan="1">Name </td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1" rowspan="6">Instance</td>
                        <td colspan="1">flavorRef</td>
                        <td colspan="3"><para>Reference (href) to a flavor as specified in the response from the List Flavors API call.
                            This is the actual URI as specified by the href field in the link. Refer to the List Flavors response examples that follow for an example of the flavorRef.</para>
                            <note><para>Rather than the flavor URI, you can also pass the flavor id (integer) as the value for flavorRef.</para></note>
                            <para>Refer to <link
                                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/GET_getFlavors__version___accountId__flavors_flavors.html"
                                >List flavors</link> for details.</para></td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">(volume) size</td>
                        <td colspan="3">Specifies the volume size in gigabytes (GB). The value specified must be between 1 and 300.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">name</td>
                        <td colspan="3">Name of the instance to create. The length of the name is limited to 255 characters and any characters are permitted.</td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1">replica_of</td>
                        <td colspan="3">Identifier of the source instance to replicate.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">configuration</td>
                        <td colspan="3">Identifier of the <glossterm>configuration group</glossterm> to associate with the instance.</td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1">(datastore) version / type</td>
                        <td colspan="3">Name or uuid  of the datastore version and type to associate with the instance. If the datastore is not specified, it defaults to mysql.</td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1" rowspan="3">Database</td>
                        <td colspan="1">name</td>
                        <td colspan="3">Specifies <glossterm>database</glossterm> names for creating databases on instance creation. Refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createInstance__version___accountId__instances_Database_Instances.html"
                            >Create instance</link> for the required json format.</td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1">character_set</td>
                        <td colspan="3">Set of symbols and encodings. The default character set is <code>utf8</code>.</td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1">collate</td>
                        <td colspan="3">Set of rules for comparing characters in a character set. The default value for collate is <code>utf8_general_ci</code>.</td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1" rowspan="4">User</td>
                        <td colspan="1">name</td>
                        <td colspan="3">Specifies user name for the database on instance creation. Refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createUser__version___accountId__instances__instanceId__users_user_management.html"
                            >Create user</link> for the required json format.</td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1">password</td>
                        <td colspan="3">Specifies password for those users on instance creation. Refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createUser__version___accountId__instances__instanceId__users_user_management.html"
                            >Create user</link> for the required json format.</td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1">(database) name</td>
                        <td colspan="3">Specifies names of databases that those users can access on instance creation. Refer to <link
                            xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createUser__version___accountId__instances__instanceId__users_user_management.html"
                            >Create user</link> for the required json format.</td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1">host</td>
                        <td colspan="3">Specifies the host from which a user is allowed to connect to the database. Possible values are a string containing an IPv4 address or "%" to allow connecting from any host.
                            Refer to <link
                                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user_access_restrict_by_host-dle387.html"
                                >User access restriction by host</link> for details. If <code>host</code> is not specified, it defaults to "%".</td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1" rowspan="1">Restore</td>
                        <td colspan="1">restorePoint</td>
                        <td colspan="3"><para>Specifies the backup id from which to restore the database instance.</para>
                            <note><itemizedlist spacing="compact">
                                <listitem>
                                    <para>When you execute the Restore Backup operation, a new database instance is created to store the backup whose id is specified by
                                        the <code>restorePoint</code> attribute.</para>
                                </listitem>
                                <listitem>
                                    <para>All users/passwords/access that were on the instance at the time of the backup will be restored along with the databases.</para>
                                </listitem>
                                <listitem>
                                    <para>You can create new users or databases if you want, but they cannot be the same as the ones from the instance that was backed up.</para>
                                </listitem>
                                <listitem>
                                    <para>Refer to the Create Database Instance Restore Request and Response examples for the required json format and details.</para>
                                </listitem>
                            </itemizedlist></note></td>
                        <td colspan="1">No</td>
                    </tr>
                </tbody>
            </table>

            <para>Refer to <link
                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/database_instance_status.html"
                >Database instance status</link> for a list of possible database instance statuses that may be returned.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create replica request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-replica-request.json"/>
                </doc>
            </representation>
     <!--         <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc title="Create database instance restore request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance restore request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-restore-request.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc title="Create database instance configuration request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance configuration request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-config-request.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc title="Create database instance datastore request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance datastore request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-datastore-request.json"/>
                </doc>
            </representation> -->

        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create replica response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-replica-response.json"/>
                    <para xmlns="http://docbook.org/ns/docbook">For convenience, notice in the response example above that resources contain links to themselves. This allows a client to easily obtain
                        resource URIs rather than to construct them. There are two kinds of link relations
                        associated with resources. A <code>self</code> link contains a <emphasis>versioned</emphasis> link to the resource. These
                        links should be used in cases where the link will be followed immediately. A <code>bookmark</code>
                        link provides a permanent link to a resource that is appropriate for long term storage.</para>
                </doc>
            </representation>
     <!--         <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc title="Create database instance restore response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance restore response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-restore-response.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc title="Create database instance config response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance configuration response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-config-response.json"/>
                    <para xmlns="http://docbook.org/ns/docbook">Notice in the response example above the configuration named "MySQL Tuned Config" is returned in the response.</para>
                </doc>
            </representation>

            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc title="Create database instance datastore response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance datastore response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-datastore-response.json"/>
                </doc>
            </representation>  -->

        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getReplicaSource">
        <wadl:doc xml:lang="EN" title="List replica source"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists status and details for a specified replica source instance.</para>
            <para>This operation lists the status and details of the specified replica source instance. <phrase>The operation also lists
                the <glossterm>configuration group</glossterm> id/name if the running instance has been associated with a configuration group.</phrase></para>

            <para>This operation lists the volume size in gigabytes (GB) and the approximate GB used.</para>
            <note><para>After instance creation, the <code>used</code> size of your volume will be
                greater than 0. This is expected and due to the automatic creation of
                non-empty transaction logs for database optimization. The <code>used</code> attribute is <emphasis>not</emphasis> returned
                in the response when the status for the instance is BUILD, REBOOT, RESIZE, or ERROR.</para> </note>
            <para>Refer to <link
                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/database_instance_status.html"
                >Database instance status</link> for a list of possible database instance statuses that may be returned.</para>
            <para>The list operations return a DNS-resolvable hostname associated with the database instance instead of an IP address. Since the hostname always resolves to the correct IP address of the database instance, this relieves the user from the task of maintaining the mapping. Note that although the IP address may likely change on resizing, migrating, and so forth, the hostname always resolves to the correct database instance.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List replica source request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-replica-source-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List replica source response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-replica-source-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getReplica">
        <wadl:doc xml:lang="EN" title="List replica details"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists status and details for a specified replica.</para>
            <para>This operation lists the status and details of the specified replica. <phrase>The operation also lists
                the <glossterm>configuration group</glossterm> id/name if the running instance has been associated with a configuration group.</phrase></para>

            <para>This operation lists the volume size in gigabytes (GB) and the approximate GB used.</para>
            <note><para>After instance creation, the <code>used</code> size of your volume will be
                greater than 0. This is expected and due to the automatic creation of
                non-empty transaction logs for database optimization. The <code>used</code> attribute is <emphasis>not</emphasis> returned
                in the response when the status for the instance is BUILD, REBOOT, RESIZE, or ERROR.</para> </note>
            <para>Refer to <link
                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/database_instance_status.html"
                >Database instance status</link> for a list of possible database instance statuses that may be returned.</para>
            <para>The list operations return a DNS-resolvable hostname associated with the database instance instead of an IP address. Since the hostname always resolves to the correct IP address of the database instance, this relieves the user from the task of maintaining the mapping. Note that although the IP address may likely change on resizing, migrating, and so forth, the hostname always resolves to the correct database instance.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List replica details request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-replica-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List replica details response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-replica-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getReplicasBySourceInstance">
        <wadl:doc xml:lang="EN" title="List replicas for source instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists replicas for a specified source instance.</para>
            <para>This operation lists replicas for a specified source instance.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List replicas for source instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-replicas-source-instance-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List replicas for source instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-replicas-source-instance-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

      <method name="GET" id="getReplicasOrReplicaSources">
        <wadl:doc xml:lang="EN" title="List all replicas and replica source database instances"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists the status and information for all replicas and replica sources.</para>
            <para>This operation lists the status and information for all replicas and replica sources.</para>
            <para>Refer to <link
                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/database_instance_status.html"
                >Database instance status</link> for a list of possible database instance statuses that may be returned.</para>
        </wadl:doc>
        <request>
            <param style="query" type="string" name="include_replicas"
                required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN"><para>When <code>include_replicas</code> is set to <code>false</code>, the replica instances are filtered out of the response.</para></wadl:doc>
            </param>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all replicas and replica sources request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-replicas-or-sources-request.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc title="List all instances/replica sources and filter out replicas: JSON request">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all instances/replica sources and filter out replicas request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-replicas-or-sources-filter-replicas-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all replicas or replica sources response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-replicas-or-sources-response.json"/>
                </doc>
            </representation>
            <representation mediaType="application/json" >
                <doc title="List all instances/replica sources and filter out replicas: JSON response">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all instances/replica sources and filter out replicas response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-replicas-or-sources-filter-replicas-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="PATCH" id="detachReplica">
        <wadl:doc xml:lang="EN" title="Detach replica"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Detaches the specified replica instance from its replication source instance.</para>
            <para>This operation detaches the specified replica instance from its replication source instance.
                This call requires the user to specify id of the replica instance to detach.
            </para>
            <note>
                <para>Detaching a replica will change the
                    database instance status to DETACH_REPLICA.
                    The status will change back to ACTIVE once the replica is completely
                    detached from the source and is no longer a replica.</para>
            </note>

       <para>The following table lists the required attributes for Detach replica:</para>
            <table rules="all">
                <caption>Required and optional attributes for Detach replica</caption>
                <thead>
                    <tr>
                        <td colspan="1">Applies To </td>
                        <td colspan="1">Name </td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1" rowspan="1">Instance</td>
                        <td colspan="1">replica_of</td>
                        <td colspan="3">Identifier of the source instance to replicate.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                </tbody>
            </table>

            <para>Refer to <link
                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/database_instance_status.html"
                >Database instance status</link> for a list of possible database instance statuses that may be returned.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Detach replica request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-detach-replica-request.json"/>
                </doc>
            </representation>
            <!--         <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc title="Create database instance restore request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance restore request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-restore-request.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc title="Create database instance configuration request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance configuration request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-config-request.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json" element="dbaas:DatabaseInstance">
                <doc title="Create database instance datastore request: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance datastore request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-datastore-request.json"/>
                </doc>
            </representation> -->

        </request>
        <response status="202">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Detach replica response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-detach-replica-response.json"/>
                </doc>
            </representation>
            <!--         <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc title="Create database instance restore response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance restore response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-backup-restore-response.json"/>
                </doc>
            </representation>

            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc title="Create database instance config response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance configuration response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-config-response.json"/>
                    <para xmlns="http://docbook.org/ns/docbook">Notice in the response example above the configuration named "MySQL Tuned Config" is returned in the response.</para>
                </doc>
            </representation>

            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc title="Create database instance datastore response: JSON">
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create database instance datastore response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-instance-datastore-response.json"/>
                </doc>
            </representation>  -->

        </response>
        &commonFaults;
        &getFaults;
    </method>

    <!-- HA -->
    <method name="POST" id="createHa">
        <wadl:doc xml:lang="EN" title="Create HA database instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Creates a new HA instance.</para>
            <para>This operation creates a new HA instance.</para>
            <para>The <code>name</code> of the HA instance is a required attribute.</para>
            <para>The following attributes are required for each HA instance:</para>

            <table rules="all">
                <caption>Required and optional attributes for Create HA instance</caption>
                <thead>
                    <tr>
                        <td colspan="1">Name </td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1">name</td>
                        <td colspan="3">Specifies the name of the HA instance.
                            The length should be limited to 255 characters and any characters are permitted.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">(datastore)
                            version/type
                        </td>
                        <td colspan="3">The version and type of the datastore.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">replica_source
                            (name/flavorRef/volume)
                        </td>
                        <td colspan="3">The name, flavorRef, and volume of the replica source.
                            For details of each of these parameters refer to the required and optional attributes for Create instance.
                        </td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">replicas
                            (name/flavorRef/volume
                            of replicas)
                        </td>
                        <td colspan="3">Name, flavorRef, and volume of the replicas.
                            For details of each of these parameters refer to the required and optional attributes for Create instance.
                            </td>
                        <td colspan="1">Yes</td>
                    </tr>
                    <tr>
                        <td colspan="1">networks
                        </td>
                        <td colspan="3"><para>Comma-separated list of networks to be associated with the HA group. For example:
                            <code>{“networks”:[“public”,“servicenet”]}</code></para>
                            <note>
                                <itemizedlist spacing="compact">
                                <listitem><para>By default (if not specified), it will be servicenet.</para></listitem>
                                <listitem><para>If a public network would be required in addition to the servicenet,
                                    it would have to be specified in the option: <code>"networks":  ["public”]</code>.
                                    Note that this will add a public network in addition to a servicenet/private network.</para></listitem>
                                <listitem><para>Both the networks as options: <code>"networks": ["public", "servicenet"]</code>, can
                                    also be specified.</para></listitem>

                                </itemizedlist>
                            </note>
                        </td>
                        <td colspan="1">No</td>
                    </tr>
                    <tr>
                        <td colspan="1">acls
                        </td>
                        <td colspan="3">Comma
                            separated list of IP based ACLs in the CIDR format. This is required to allow the HA group access to the
                            specified IP. By default, the HA group access is blocked. For eg: "acls":
                            [{"address": "10.0.0.0/0"}, {"address":  “1.2.3.4/5”}].  Additionally, if it is not specified while
                            creating the HA group, it can be added later. Refer to <link
                                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_addAclToHaInstance__version___accountId__ha__haId__acls_ha.html"
                                >Add ACLs to an HA instance</link> for details.
                        </td>
                        <td colspan="1">No</td>
                    </tr>

                </tbody>
            </table>
        </wadl:doc>
        <request>
            <representation mediaType="application/json"
                element="dbaas:ha_instance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create HA request:<?rax-fo keep-with-next?></para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-ha-sql-request.json"/>
                </doc>
            </representation>
        </request>
        <response status="202" >
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Create HA response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-create-ha-sql-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getHa">
        <wadl:doc xml:lang="EN" title="List all HA database instances"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists all the HA database instances.</para>
            <para>This operation lists all the HA database instances..</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all HA database instances request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-ha-sql-instances-request.json"/>
                </doc>
            </representation>

        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List all HA database instances response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-ha-sql-instances-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getInstanceByHaId">
        <wadl:doc xml:lang="EN" title="List HA database instance details"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists details for a specified HA instance.</para>
            <para>This operation lists the details of the specified HA instance.</para>

            </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List HA instance status and details request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-ha-sql-status-detail-request.json"/>
                </doc>
            </representation>

        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List HA instance status and details response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-ha-sql-status-detail-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="getBackupsForHaInstance">
        <wadl:doc xml:lang="EN" title="List backups of an HA instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists backups for the HA instance specified by ha_id.</para>
            <para>This operation lists the backups of the HA instance specified by ha_id.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List backups of an HA instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-ha-backups-get-request.json"/>
                </doc>
            </representation>

        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List backups of an HA instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-instance-ha-backups-get-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="DELETE" id="deleteInstanceByHaId">
        <wadl:doc xml:lang="EN" title="Delete HA database instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Deletes an HA database instance.</para>
            <para>This operation deletes the specified HA database instance.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete HA database instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-delete-ha-sql-instance-request.json"/>
                </doc>
            </representation>

        </request>
        <response status="202">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete HA database instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-delete-ha-sql-instance-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="POST" id="addReplicaToHaInstance">
        <wadl:doc xml:lang="EN" title="Add Replica to an HA instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Add a replica node to the HA group specified by {ha_id}.</para>
            <para>This operation adds a replica node to the HA group specified by {ha_id}.
                The HA instance goes into the <code>ADDING_REPLICA</code> state as a result of this action.
                It switches back to <code>ACTIVE</code> once the operation is complete.</para>
            <warning><para>Adding a new replica node would restart the mha manager service (which monitors the
                source/replica instances to trigger failover) and the haproxy service on the load balancer nodes.
                Refer to the How-To article for more details about these components:
                <link
                    xlink:href="https://www.rackspace.com/knowledge_center/article/high-availability-for-cloud-databases"
                    >High Availability for Cloud Databases</link>.
            </para></warning>
            <para>The following table lists the required and optional attributes for creating a replica for an
                HA instance.</para>

            <!--      <table rules="all">
                <caption>Required and optional attributes for Create database</caption>
                <thead>
                    <tr>
                        <td colspan="1">Name </td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1">address</td>
                        <td colspan="3">Specifies the CIDR notated IPV4 address. The IPV4 address to use should be CIDR notated.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                </tbody>
            </table>   -->

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Add replica to an HA instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-add-replica-to-ha-instance-request.json"/>
                </doc>
            </representation>

        </request>
        <response status="202">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Add replica to an HA instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-add-replica-to-ha-instance-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="POST" id="deleteReplicaFromHaInstance">
        <wadl:doc xml:lang="EN" title="Remove Replica from an HA instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Removes a replica node from the HA setup specified by {ha_id}.</para>
            <para>This operation removes/detaches a replica node from the HA group. The HA instance goes into
                the <code>REMOVING_REPLICA</code> state as a result of this action. It switches back to
                <code>ACTIVE</code> once the operation is complete. The instance that is detached also goes into a
                <code>DETACH_REPLICA</code> state when it is being disabled as a replica and switches back to
                <code>ACTIVE</code> once detached.</para>
            <warning><para>Removing a replica node would restart the MHA manager service (which monitors the
                source/replica instances to trigger failover) and the haproxy service on the load balancer nodes.
                Refer to the How-To article for more details about these components:
                <link
                    xlink:href="https://www.rackspace.com/knowledge_center/article/high-availability-for-cloud-databases"
                    >High Availability for Cloud Databases</link>.
            </para></warning>
            <warning><para> Detaching a replica from the HA setup will cause a MySQL service restart on the detached
                instance.</para></warning>
            <para>The following table lists the required and optional attributes for creating a replica for an
                HA instance.</para>

            <!--      <table rules="all">
                <caption>Required and optional attributes for Create database</caption>
                <thead>
                    <tr>
                        <td colspan="1">Name </td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1">address</td>
                        <td colspan="3">Specifies the CIDR notated IPV4 address. The IPV4 address to use should be CIDR notated.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                </tbody>
            </table>   -->

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Remove replica from an HA instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-remove-replica-from-ha-instance-request.json"/>
                </doc>
            </representation>

        </request>
        <response status="202">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Remove replica from an HA instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-remove-replica-from-ha-instance-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="POST" id="addAclToHaInstance">
        <wadl:doc xml:lang="EN" title="Add ACLs to an HA instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Adds Access Control Lists (ACLs) to an HA instance.</para>
            <para>This operation adds ACLs to an HA instance.</para>
            <para>The following table lists the required and optional attributes for creating ACLs for an
                HA setup.</para>

            <table rules="all">
                <caption>Required and optional attributes for Create database</caption>
                <thead>
                    <tr>
                        <td colspan="1">Name </td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1">address</td>
                        <td colspan="3">Specifies the CIDR notated IPV4 address. The IPV4 address to use should be CIDR notated.</td>
                        <td colspan="1">Yes</td>
                    </tr>
                </tbody>
            </table>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Add ACLs to an HA instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-add-acls-to-ha-instance-request.json"/>
                </doc>
            </representation>

        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstance" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Add ACLs to an HA instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-add-acls-to-ha-instance-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="GET" id="listAclsForHaInstance">
        <wadl:doc xml:lang="EN" title="List ACLs for an HA instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists ACLs for an HA instance.</para>
            <para>This operation lists ACLs for an HA instance.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List ACLs for an HA instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-acls-for-ha-instance-request.json"/>
                </doc>
            </representation>

        </request>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Success" xml:lang="EN">Request succeeded.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstanceAcls" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the List ACLs for an HA instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-list-acls-for-ha-instance-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <method name="DELETE" id="deleteAclsFromHaInstance">
        <wadl:doc xml:lang="EN" title="Delete ACLs from an HA instance"  xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Deletes ACLs from an HA instance.</para>
            <para>This operation deletes ACLs from an HA instance.</para>

        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete ACLs from an HA instance request:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-delete-acls-from-ha-instance-request.json"/>
                    <note xmlns="http://docbook.org/ns/docbook"><para>Note that the string "%25252F" near the end of the IP address in the request
                        refers to the special character for the forward slash ('/') that is used with the IP address in CIDR format ("1.2.3.4/32").</para></note>
                </doc>
            </representation>

        </request>
        <response status="202">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted" xml:lang="EN">The request has been accepted for processing.</wadl:doc>
            <representation mediaType="application/json"
                element="dbaas:DatabaseInstanceAcls" >
                <doc>
                    <para xmlns="http://docbook.org/ns/docbook">The following example shows the Delete ACLs from an HA instance response:</para>
                    <xsdxt:code href="../apidocs/src/resources/samples/db-delete-acls-from-ha-instance-response.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

</application>
