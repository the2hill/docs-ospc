heat_template_version: 2014-10-16
description: |
  Deploy Nginx server with Ansible

parameters:

  image:
    type: string

resources:

  server_pw:
    type: OS::Heat::RandomString

  pull_role_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/bash
        git clone https://github.com/rackerlabs/rs-heat-docs.git
        cp -r rs-heat-docs/ansible/roles /etc/ansible/roles
        # needed dependency by one of the Ansible modules
        apt-get install -y python-pycurl

  deploy_role:
    type: OS::Heat::SoftwareDeployment
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config:
        get_resource: pull_role_config
      server:
        get_resource: server

  nginx_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      config: |
        ---
        - name: Apply Nginx Role
          hosts: localhost
          connection: local
          roles:
          - nginx

  deploy_nginx:
    type: OS::Heat::SoftwareDeployment
    depends_on: deploy_role
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config:
        get_resource: nginx_config
      server:
        get_resource: server

  server:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      admin_pass: { get_attr: [ server_pw, value ] }
      flavor: 2 GB Performance
      software_config_transport: POLL_TEMP_URL
      config_drive: true
      user_data_format: SOFTWARE_CONFIG
      
outputs:
  stdout:
    description: Ansible Output
    value:
      get_attr: [ deploy_nginx, deploy_stdout ]
  stderr:
    description: Ansible Error Output
    value:
      get_attr: [ deploy_nginx, deploy_stderr ]
  status_code:
    description: Exit Code
    value:
      get_attr: [ deploy_nginx, deploy_status_code ]
  role_status_code:
    description: Exit Code returned from deploying the role to the server
    value:
      get_attr: [ deploy_role, deploy_status_code ]
  server_ip:
    description: Server IP Address
    value:
      get_attr: [ server, accessIPv4 ]
  server_password:
    description: Server Password
    value:
      get_attr: [ server_pw, value ]